{
  "contractName": "TanzoToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_start",
          "type": "uint256"
        },
        {
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "setLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "end",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Freeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Unfreeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "freezeTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unfreezeTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6002805460ff1916905560c0604052600360808190527f312e30000000000000000000000000000000000000000000000000000000000060a09081526200004a9160089190620000cb565b503480156200005857600080fd5b5060048054600160a060020a031916339081179091556b019d971e4fe8401e74000000600181905560008281526020818152604080832084905580519384525191927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a362000170565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010e57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013e57825182559160200191906001019062000121565b506200014c92915062000150565b5090565b6200016d91905b808211156200014c576000815560010162000157565b90565b6111a680620001806000396000f3006080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301502460811461014d57806306fdde0314610164578063095ea7b3146101ee57806318160ddd1461022657806323b872dd1461024d578063313ce5671461027757806331c420d4146102a25780634000aea0146102b75780634e71e0c81461032057806354fd4d5014610335578063661884631461034a57806369ffa08a1461036e57806370a08231146103955780638da5cb5b146103b6578063902d55a5146103e757806395d89b41146103fc578063a9059cbb14610411578063be9a655514610435578063c4590d3f1461044a578063cae9ca5114610465578063d73dd623146104ce578063dd62ed3e146104f2578063e30c397814610519578063efbe1c1c1461052e578063f2fde38b14610543575b600080fd5b34801561015957600080fd5b50610162610564565b005b34801561017057600080fd5b506101796105c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fa57600080fd5b50610212600160a060020a03600435166024356105f9565b604080519115158252519081900360200190f35b34801561023257600080fd5b5061023b6106a8565b60408051918252519081900360200190f35b34801561025957600080fd5b50610212600160a060020a03600435811690602435166044356106ae565b34801561028357600080fd5b5061028c610845565b6040805160ff9092168252519081900360200190f35b3480156102ae57600080fd5b5061016261084a565b3480156102c357600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108a39650505050505050565b34801561032c57600080fd5b506101626109cd565b34801561034157600080fd5b50610179610a7b565b34801561035657600080fd5b50610212600160a060020a0360043516602435610b09565b34801561037a57600080fd5b50610212600160a060020a0360043581169060243516610c0b565b3480156103a157600080fd5b5061023b600160a060020a0360043516610d5d565b3480156103c257600080fd5b506103cb610d78565b60408051600160a060020a039092168252519081900360200190f35b3480156103f357600080fd5b5061023b610d87565b34801561040857600080fd5b50610179610d97565b34801561041d57600080fd5b50610212600160a060020a0360043516602435610dce565b34801561044157600080fd5b5061023b610ecd565b34801561045657600080fd5b50610162600435602435610ed3565b34801561047157600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610eff9650505050505050565b3480156104da57600080fd5b50610212600160a060020a0360043516602435611014565b3480156104fe57600080fd5b5061023b600160a060020a03600435811690602435166110bc565b34801561052557600080fd5b506103cb6110f7565b34801561053a57600080fd5b5061023b611106565b34801561054f57600080fd5b50610162600160a060020a036004351661110c565b600454600160a060020a0316331461057b57600080fd5b60025460ff1615156105c0576002805460ff1916600117905560405133907faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304990600090a25b565b60408051808201909152600b81527f54616e7a6f20546f6b656e000000000000000000000000000000000000000000602082015281565b600060023660441461060757fe5b8215806106355750336000908152600360209081526040808320600160a060020a0388168452909152902054155b151561064057600080fd5b336000818152600360209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60015490565b60025460009060ff16156106c157600080fd5b6003366064146106cd57fe5b600160a060020a03841615156106e257600080fd5b600160a060020a03851660009081526020819052604090205483111561070757600080fd5b600160a060020a038516600090815260036020908152604080832033845290915290205483111561073757600080fd5b600160a060020a038516600090815260208190526040902054610760908463ffffffff61115216565b600160a060020a038087166000908152602081905260408082209390935590861681522054610795908463ffffffff61116416565b600160a060020a038086166000908152602081815260408083209490945591881681526003825282812033825290915220546107d7908463ffffffff61115216565b600160a060020a03808716600081815260036020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b601281565b600454600160a060020a0316331461086157600080fd5b60025460ff16156105c0576002805460ff1916905560405133907fca5069937e68fd197927055037f59d7c90bf75ac104e6e375539ef480c3ad6ee90600090a2565b6000836108b08185610dce565b1561083d576040517f141469ce0000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a0387169563141469ce95948b94938b939192909160a490910190602085019080838360005b83811015610948578181015183820152602001610930565b50505050905090810190601f1680156109755780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b505050506040513d60208110156109c157600080fd5b506001925061083d9050565b600554600160a060020a031633146109e457600080fd5b60065443111580156109f857506007544310155b1515610a0357600080fd5b600554600454604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546004805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551690556000600655565b6008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b505050505081565b600080600236604414610b1857fe5b336000908152600360209081526040808320600160a060020a0389168452909152902054915081841115610b6f57336000908152600360209081526040808320600160a060020a0389168452909152812055610ba4565b610b7f828563ffffffff61115216565b336000908152600360209081526040808320600160a060020a038a1684529091529020555b336000818152600360209081526040808320600160a060020a038a168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3506001949350505050565b60045460009081908190600160a060020a03163314610c2957600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051869350600160a060020a038416916370a082319160248083019260209291908290030181600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d6020811015610cb757600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820184905291519293509084169163a9059cbb916044808201926020929091908290030181600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d6020811015610d5257600080fd5b505195945050505050565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a031681565b6b019d971e4fe8401e7400000081565b60408051808201909152600381527f545a4f0000000000000000000000000000000000000000000000000000000000602082015281565b60025460009060ff1615610de157600080fd5b600236604414610ded57fe5b600160a060020a0384161515610e0257600080fd5b33600090815260208190526040902054831115610e1e57600080fd5b33600090815260208190526040902054610e3e908463ffffffff61115216565b3360009081526020819052604080822092909255600160a060020a03861681522054610e70908463ffffffff61116416565b600160a060020a038516600081815260208181526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b60075481565b600454600160a060020a03163314610eea57600080fd5b80821115610ef757600080fd5b600655600755565b600083610f0c81856105f9565b1561083d576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610fa4578181015183820152602001610f8c565b50505050905090810190601f168015610fd15780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610ff357600080fd5b505af1158015611007573d6000803e3d6000fd5b505050506001915061083d565b600060023660441461102257fe5b336000908152600360209081526040808320600160a060020a0388168452909152902054611056908463ffffffff61116416565b336000818152600360209081526040808320600160a060020a038a168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a35060019392505050565b60006002366044146110ca57fe5b5050600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600554600160a060020a031681565b60065481565b600454600160a060020a0316331461112357600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561115e57fe5b50900390565b60008282018381101561117357fe5b93925050505600a165627a7a7230582009a9ffcde4c00b1478f4732843e9bf4a7c778a48238653b313d5b927bb1f40cf0029",
  "deployedBytecode": "0x6080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301502460811461014d57806306fdde0314610164578063095ea7b3146101ee57806318160ddd1461022657806323b872dd1461024d578063313ce5671461027757806331c420d4146102a25780634000aea0146102b75780634e71e0c81461032057806354fd4d5014610335578063661884631461034a57806369ffa08a1461036e57806370a08231146103955780638da5cb5b146103b6578063902d55a5146103e757806395d89b41146103fc578063a9059cbb14610411578063be9a655514610435578063c4590d3f1461044a578063cae9ca5114610465578063d73dd623146104ce578063dd62ed3e146104f2578063e30c397814610519578063efbe1c1c1461052e578063f2fde38b14610543575b600080fd5b34801561015957600080fd5b50610162610564565b005b34801561017057600080fd5b506101796105c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fa57600080fd5b50610212600160a060020a03600435166024356105f9565b604080519115158252519081900360200190f35b34801561023257600080fd5b5061023b6106a8565b60408051918252519081900360200190f35b34801561025957600080fd5b50610212600160a060020a03600435811690602435166044356106ae565b34801561028357600080fd5b5061028c610845565b6040805160ff9092168252519081900360200190f35b3480156102ae57600080fd5b5061016261084a565b3480156102c357600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108a39650505050505050565b34801561032c57600080fd5b506101626109cd565b34801561034157600080fd5b50610179610a7b565b34801561035657600080fd5b50610212600160a060020a0360043516602435610b09565b34801561037a57600080fd5b50610212600160a060020a0360043581169060243516610c0b565b3480156103a157600080fd5b5061023b600160a060020a0360043516610d5d565b3480156103c257600080fd5b506103cb610d78565b60408051600160a060020a039092168252519081900360200190f35b3480156103f357600080fd5b5061023b610d87565b34801561040857600080fd5b50610179610d97565b34801561041d57600080fd5b50610212600160a060020a0360043516602435610dce565b34801561044157600080fd5b5061023b610ecd565b34801561045657600080fd5b50610162600435602435610ed3565b34801561047157600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610eff9650505050505050565b3480156104da57600080fd5b50610212600160a060020a0360043516602435611014565b3480156104fe57600080fd5b5061023b600160a060020a03600435811690602435166110bc565b34801561052557600080fd5b506103cb6110f7565b34801561053a57600080fd5b5061023b611106565b34801561054f57600080fd5b50610162600160a060020a036004351661110c565b600454600160a060020a0316331461057b57600080fd5b60025460ff1615156105c0576002805460ff1916600117905560405133907faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304990600090a25b565b60408051808201909152600b81527f54616e7a6f20546f6b656e000000000000000000000000000000000000000000602082015281565b600060023660441461060757fe5b8215806106355750336000908152600360209081526040808320600160a060020a0388168452909152902054155b151561064057600080fd5b336000818152600360209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60015490565b60025460009060ff16156106c157600080fd5b6003366064146106cd57fe5b600160a060020a03841615156106e257600080fd5b600160a060020a03851660009081526020819052604090205483111561070757600080fd5b600160a060020a038516600090815260036020908152604080832033845290915290205483111561073757600080fd5b600160a060020a038516600090815260208190526040902054610760908463ffffffff61115216565b600160a060020a038087166000908152602081905260408082209390935590861681522054610795908463ffffffff61116416565b600160a060020a038086166000908152602081815260408083209490945591881681526003825282812033825290915220546107d7908463ffffffff61115216565b600160a060020a03808716600081815260036020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b601281565b600454600160a060020a0316331461086157600080fd5b60025460ff16156105c0576002805460ff1916905560405133907fca5069937e68fd197927055037f59d7c90bf75ac104e6e375539ef480c3ad6ee90600090a2565b6000836108b08185610dce565b1561083d576040517f141469ce0000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a0387169563141469ce95948b94938b939192909160a490910190602085019080838360005b83811015610948578181015183820152602001610930565b50505050905090810190601f1680156109755780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b505050506040513d60208110156109c157600080fd5b506001925061083d9050565b600554600160a060020a031633146109e457600080fd5b60065443111580156109f857506007544310155b1515610a0357600080fd5b600554600454604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546004805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551690556000600655565b6008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b505050505081565b600080600236604414610b1857fe5b336000908152600360209081526040808320600160a060020a0389168452909152902054915081841115610b6f57336000908152600360209081526040808320600160a060020a0389168452909152812055610ba4565b610b7f828563ffffffff61115216565b336000908152600360209081526040808320600160a060020a038a1684529091529020555b336000818152600360209081526040808320600160a060020a038a168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3506001949350505050565b60045460009081908190600160a060020a03163314610c2957600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051869350600160a060020a038416916370a082319160248083019260209291908290030181600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d6020811015610cb757600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820184905291519293509084169163a9059cbb916044808201926020929091908290030181600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d6020811015610d5257600080fd5b505195945050505050565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a031681565b6b019d971e4fe8401e7400000081565b60408051808201909152600381527f545a4f0000000000000000000000000000000000000000000000000000000000602082015281565b60025460009060ff1615610de157600080fd5b600236604414610ded57fe5b600160a060020a0384161515610e0257600080fd5b33600090815260208190526040902054831115610e1e57600080fd5b33600090815260208190526040902054610e3e908463ffffffff61115216565b3360009081526020819052604080822092909255600160a060020a03861681522054610e70908463ffffffff61116416565b600160a060020a038516600081815260208181526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b60075481565b600454600160a060020a03163314610eea57600080fd5b80821115610ef757600080fd5b600655600755565b600083610f0c81856105f9565b1561083d576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610fa4578181015183820152602001610f8c565b50505050905090810190601f168015610fd15780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610ff357600080fd5b505af1158015611007573d6000803e3d6000fd5b505050506001915061083d565b600060023660441461102257fe5b336000908152600360209081526040808320600160a060020a0388168452909152902054611056908463ffffffff61116416565b336000818152600360209081526040808320600160a060020a038a168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a35060019392505050565b60006002366044146110ca57fe5b5050600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600554600160a060020a031681565b60065481565b600454600160a060020a0316331461112357600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561115e57fe5b50900390565b60008282018381101561117357fe5b93925050505600a165627a7a7230582009a9ffcde4c00b1478f4732843e9bf4a7c778a48238653b313d5b927bb1f40cf0029",
  "sourceMap": "789:28:7:-;;;-1:-1:-1;;789:28:7;;;1211:29:1;809:1637;1211:29;;809:1637;1211:29;;;;;;;;;;;;;;:::i;:::-;;1317:243;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;974:5:6;:18;;-1:-1:-1;;;;;;974:18:6;982:10;974:18;;;;;;1150:37:1;974:18:6;1368:27:1;;;974:5:6;1442:20:1;;;;;;;;;;;:35;;;1516:39;;;;;;974:5:6;;1516:39:1;;;;;;;;;;;809:1637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;809:1637:1;;;-1:-1:-1;809:1637:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "809:1637:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2020:145:1;;;;;;893:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;893:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;893:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:271:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2314:271:10;-1:-1:-1;;;;;2314:271:10;;;;;;;;;;;;;;;;;;;;;;;;;1183:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1183:83:7;;;;;;;;;;;;;;;;;;;;1214:477:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1214:477:10;-1:-1:-1;;;;;1214:477:10;;;;;;;;;;;;1036:35:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1036:35:1;;;;;;;;;;;;;;;;;;;;;;;2212:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2212:149:1;;;;5656:291:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5656:291:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5656:291:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5656:291:10;;-1:-1:-1;5656:291:10;;-1:-1:-1;;;;;;;5656:291:10;1306:240:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1306:240:5;;;;1211:29:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1211:29:1;;;;4249:422:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4249:422:10;-1:-1:-1;;;;;4249:422:10;;;;;;;1749:216:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1749:216:1;-1:-1:-1;;;;;1749:216:1;;;;;;;;;;2039:107:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2039:107:7;-1:-1:-1;;;;;2039:107:7;;;;;716:20:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:20:6;;;;;;;;-1:-1:-1;;;;;716:20:6;;;;;;;;;;;;;;1111:76:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1111:76:1;;;;967:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;967:37:1;;;;1420:417:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1420:417:7;-1:-1:-1;;;;;1420:417:7;;;;;;;760:20:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;760:20:5;;;;1016:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1016:136:5;;;;;;;5047:289:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5047:289:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5047:289:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5047:289:10;;-1:-1:-1;5047:289:10;;-1:-1:-1;;;;;;;5047:289:10;3506:281;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3506:281:10;-1:-1:-1;;;;;3506:281:10;;;;;;;2904:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2904:145:10;-1:-1:-1;;;;;2904:145:10;;;;;;;;;;731:27:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;731:27:4;;;;738:18:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;738:18:5;;;;1079:96:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1079:96:4;-1:-1:-1;;;;;1079:96:4;;;;;2020:145:1;1126:5:6;;-1:-1:-1;;;;;1126:5:6;1112:10;:19;1104:28;;;;;;2076:15:1;;;;2075:16;2071:90;;;2101:15;:22;;-1:-1:-1;;2101:22:1;2119:4;2101:22;;;2136:18;;2143:10;;2136:18;;2101:15;;2136:18;2071:90;2020:145::o;893:43::-;;;;;;;;;;;;;;;;;;;:::o;2314:271:10:-;2400:4;2381:1;935:8:7;954:17;935:36;928:44;;;;2420:11:10;;;:49;;-1:-1:-1;2443:10:10;2435:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2435:29:10;;;;;;;;;;:34;2420:49;2412:58;;;;;;;;2484:10;2476:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2476:29:10;;;;;;;;;;;;:38;;;2525;;;;;;;2476:29;;2484:10;2525:38;;;;;;;;;;;-1:-1:-1;2576:4:10;;2314:271;-1:-1:-1;;;2314:271:10:o;1183:83:7:-;1249:12;;1183:83;:::o;1214:477:10:-;1086:15:7;;1329:4:10;;1086:15:7;;1082:29;;;1103:8;;;1082:29;1310:1:10;935:8:7;954:17;935:36;928:44;;;;-1:-1:-1;;;;;1349:17:10;;;;1341:26;;;;;;-1:-1:-1;;;;;1391:15:10;;:8;:15;;;;;;;;;;;1381:25;;;1373:34;;;;;;-1:-1:-1;;;;;1431:14:10;;;;;;:7;:14;;;;;;;;1446:10;1431:26;;;;;;;;1421:36;;;1413:45;;;;;;-1:-1:-1;;;;;1483:15:10;;:8;:15;;;;;;;;;;;:27;;1503:6;1483:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1465:15:10;;;:8;:15;;;;;;;;;;;:45;;;;1532:13;;;;;;;:25;;1550:6;1532:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1516:13:10;;;:8;:13;;;;;;;;;;;:41;;;;1592:14;;;;;:7;:14;;;;;1607:10;1592:26;;;;;;;:38;;1623:6;1592:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1563:14:10;;;;;;;:7;:14;;;;;;;;1578:10;1563:26;;;;;;;;:67;;;;1641:28;;;;;;;;;;;1563:14;;1641:28;;;;;;;;;;;1682:4;1675:11;;978:1:7;1117;1214:477:10;;;;;:::o;1036:35:1:-;1069:2;1036:35;:::o;2212:149::-;1126:5:6;;-1:-1:-1;;;;;1126:5:6;1112:10;:19;1104:28;;;;;;2269:15:1;;;;2265:92;;;2294:15;:23;;-1:-1:-1;;2294:23:1;;;2330:20;;2339:10;;2330:20;;2312:5;;2330:20;2212:149::o;5656:291:10:-;5747:4;5800:9;5820:27;5800:9;5840:6;5820:8;:27::i;:::-;5816:127;;;5857:60;;;;;5880:10;5857:60;;;;;;;;;;;;5900:4;5857:60;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5857:22:10;;;;;5880:10;5892:6;;5900:4;5906:10;;5857:60;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5857:60:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5857:60:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5857:60:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5932:4:10;;-1:-1:-1;5925:11:10;;-1:-1:-1;5925:11:10;1306:240:5;911:12:4;;-1:-1:-1;;;;;911:12:4;897:10;:26;889:35;;;;;;1387:3:5;;1371:12;:19;;1370:48;;;;;1412:5;;1396:12;:21;;1370:48;1362:57;;;;;;;;1458:12;;1451:5;;1430:41;;-1:-1:-1;;;;;1458:12:5;;;;1451:5;;;;1430:41;;1458:12;;1430:41;1485:12;;;1477:5;:20;;-1:-1:-1;;1477:20:5;;;-1:-1:-1;;;;;1485:12:5;;1477:20;;;;1503:25;;;1485:12;1534:3;:7;1306:240::o;1211:29:1:-;;;;;;;;;;;;;;;-1:-1:-1;;1211:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4249:422:10:-;4351:4;;4332:1;935:8:7;954:17;935:36;928:44;;;;4387:10:10;4379:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4379:29:10;;;;;;;;;;;-1:-1:-1;4418:27:10;;;4414:164;;;4463:10;4487:1;4455:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4455:29:10;;;;;;;;;:33;4414:164;;;4541:30;:8;4554:16;4541:30;:12;:30;:::i;:::-;4517:10;4509:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4509:29:10;;;;;;;;;:62;4414:164;4597:10;4619:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4588:61:10;;4619:29;;;;;;;;;;;4588:61;;;;;;;;;4597:10;4588:61;;;;;;;;;;;-1:-1:-1;4662:4:10;;4249:422;-1:-1:-1;;;;4249:422:10:o;1749:216:1:-;1126:5:6;;1825:4:1;;;;;;-1:-1:-1;;;;;1126:5:6;1112:10;:19;1104:28;;;;;;1898:21:1;;;;;;1914:4;1898:21;;;;;;1867:6;;-1:-1:-1;;;;;;1898:15:1;;;;;:21;;;;;;;;;;;;;;-1:-1:-1;1898:15:1;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1898:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1898:21:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1898:21:1;1932:28;;;;;;-1:-1:-1;;;;;1932:28:1;;;;;;;;;;;;;;;1898:21;;-1:-1:-1;1932:14:1;;;;;;:28;;;;;1898:21;;1932:28;;;;;;;;-1:-1:-1;1932:14:1;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1932:28:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1932:28:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1932:28:1;;1749:216;-1:-1:-1;;;;;1749:216:1:o;2039:107:7:-;-1:-1:-1;;;;;2125:16:7;2095:15;2125:16;;;;;;;;;;;;2039:107::o;716:20:6:-;;;-1:-1:-1;;;;;716:20:6;;:::o;1111:76:1:-;1150:37;1111:76;:::o;967:37::-;;;;;;;;;;;;;;;;;;;:::o;1420:417:7:-;1086:15;;1516:4;;1086:15;;1082:29;;;1103:8;;;1082:29;1497:1;935:8;954:17;935:36;928:44;;;;-1:-1:-1;;;;;1536:17:7;;;;1528:26;;;;;;1587:10;1578:8;:20;;;;;;;;;;;1568:30;;;1560:39;;;;;;1701:10;1692:8;:20;;;;;;;;;;;:32;;1717:6;1692:32;:24;:32;:::i;:::-;1678:10;1669:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;1746:13:7;;;;;;:25;;1764:6;1746:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1730:13:7;;:8;:13;;;;;;;;;;;;:41;;;;1782:33;;;;;;;1730:13;;1791:10;;1782:33;;;;;;;;;;-1:-1:-1;1828:4:7;;1420:417;-1:-1:-1;;;1420:417:7:o;760:20:5:-;;;;:::o;1016:136::-;1126:5:6;;-1:-1:-1;;;;;1126:5:6;1112:10;:19;1104:28;;;;;;1096:14:5;;;;1088:23;;;;;;1117:3;:10;1133:5;:14;1016:136::o;5047:289:10:-;5139:4;5191:8;5210:25;5191:8;5228:6;5210:7;:25::i;:::-;5206:126;;;5245:61;;;;;5269:10;5245:61;;;;;;;;;;;;5289:4;5245:61;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5245:23:10;;;;;5269:10;5281:6;;5289:4;5295:10;;5245:61;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5245:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5245:61:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5245:61:10;;;;5321:4;5314:11;;;;3506:281;3603:4;3584:1;935:8:7;954:17;935:36;928:44;;;;3655:10:10;3647:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3647:29:10;;;;;;;;;;:46;;3681:11;3647:46;:33;:46;:::i;:::-;3623:10;3615:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3615:29:10;;;;;;;;;;;;:78;;;3704:61;;;;;;3615:29;;3704:61;;;;;;;;;;;-1:-1:-1;3778:4:10;;3506:281;-1:-1:-1;;;3506:281:10:o;2904:145::-;2997:7;2973:1;935:8:7;954:17;935:36;928:44;;;;-1:-1:-1;;;;;;;3019:15:10;;;;;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2904:145::o;731:27:4:-;;;-1:-1:-1;;;;;731:27:4;;:::o;738:18:5:-;;;;:::o;1079:96:4:-;1126:5:6;;-1:-1:-1;;;;;1126:5:6;1112:10;:19;1104:28;;;;;;1147:12:4;:23;;-1:-1:-1;;1147:23:4;-1:-1:-1;;;;;1147:23:4;;;;;;;;;;1079:96::o;1313:110:3:-;1371:7;1393:6;;;;1386:14;;;;-1:-1:-1;1413:5:3;;;1313:110::o;1485:129::-;1543:7;1570:5;;;1588:6;;;;1581:14;;;;1608:1;1485:129;-1:-1:-1;;;1485:129:3:o",
  "source": "pragma solidity ^0.4.23;\n\n/**\n* TANZO (TZO) ERC20 Token Smart Contract implementation.\n*\n* Copyright © 2018 by Tanzo Ltd.\n*\n* Developed by NewCryptoBlock.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND (express or implied).\n*/\n\nimport \"./lib/token/ERC20Basic.sol\";\nimport \"./lib/token/StandardToken.sol\";\nimport \"./lib/ownership/DelayedClaimable.sol\";\n\n/**\n * @title Tanzo: The Blockchain-based social marketplace for handmade goods.\n * @author Tanzo team (https://tanzo.io)\n * @dev The Tanzo token smart contract based on ERC20\n */\ncontract TanzoToken is StandardToken, DelayedClaimable {\n\n  // Set the token name\n  string public constant name = \"Tanzo Token\";\n\n  // Set the token symbol\n  string public constant symbol = \"TZO\";\n\n  // Define token decimals\n  uint8 public constant decimals = 18;\n\n  // Define the total token supply\n  uint256 public constant TOTAL_SUPPLY = 500000000 * (10 ** uint256(decimals));\n\n  // Token version\n  string public version = \"1.0\";\n\n  /**\n   * @notice Creates the TanzoToken smart contract instance\n   */\n  constructor() public {\n    // Set token supply\n    totalSupply_ = TOTAL_SUPPLY;\n\n    // Transfer all tokens to the owner\n    balances[msg.sender] = TOTAL_SUPPLY;\n\n    // Emit transfer event\n    emit Transfer(0x0, msg.sender, TOTAL_SUPPLY);\n  }\n\n  /**\n   * @dev Used to claim tokens send to wrong address\n   * @param _token The address that holds the tokens.\n   * @param _to The address that is claiming ownership of tokens.\n   */\n  function claimTokens(address _token, address _to) onlyOwner public returns (bool) {\n    ERC20Basic token = ERC20Basic(_token);\n    uint256 balance = token.balanceOf(this);\n    return token.transfer(_to, balance);\n  }\n\n  /**\n   * Temporary freeze tocken transfers\n   */\n  function freezeTransfers () onlyOwner public {\n    if (!transfersFrozen) {\n      transfersFrozen = true;\n      emit Freeze(msg.sender);\n    }\n  }\n\n  /**\n   * Unfreeze token transfers.\n   */\n  function unfreezeTransfers () onlyOwner public {\n    if (transfersFrozen) {\n      transfersFrozen = false;\n      emit Unfreeze(msg.sender);\n    }\n  }\n\n  event Freeze (address indexed owner);\n  event Unfreeze (address indexed owner);\n}\n",
  "sourcePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/TanzoToken.sol",
  "ast": {
    "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/TanzoToken.sol",
    "exportedSymbols": {
      "TanzoToken": [
        186
      ]
    },
    "id": 187,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/lib/token/ERC20Basic.sol",
        "file": "./lib/token/ERC20Basic.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 743,
        "src": "504:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/lib/token/StandardToken.sol",
        "file": "./lib/token/StandardToken.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1118,
        "src": "541:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/lib/ownership/DelayedClaimable.sol",
        "file": "./lib/ownership/DelayedClaimable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 481,
        "src": "581:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1092,
              "src": "832:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1092",
                "typeString": "contract StandardToken"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "832:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "DelayedClaimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 480,
              "src": "847:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelayedClaimable_$480",
                "typeString": "contract DelayedClaimable"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "847:16:1"
          }
        ],
        "contractDependencies": [
          407,
          480,
          536,
          710,
          667,
          742,
          1092
        ],
        "contractKind": "contract",
        "documentation": "@title Tanzo: The Blockchain-based social marketplace for handmade goods.\n@author Tanzo team (https://tanzo.io)\n@dev The Tanzo token smart contract based on ERC20",
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186,
          480,
          407,
          536,
          1092,
          667,
          710,
          742
        ],
        "name": "TanzoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 68,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "893:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 66,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "893:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "54616e7a6f20546f6b656e",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "923:13:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3a6b30120b275629c1a946458ca7bbe7d7f32b35b93fffd557e2a06fb227f327",
                "typeString": "literal_string \"Tanzo Token\""
              },
              "value": "Tanzo Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 71,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "967:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 69,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "967:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545a4f",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "999:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_56a2317e9a72b59aad336b94b82e698608350ee4d5d464f561fc2a91f2470d1f",
                "typeString": "literal_string \"TZO\""
              },
              "value": "TZO"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 74,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "1036:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 72,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1036:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 73,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1069:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 84,
            "name": "TOTAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "1111:76:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 75,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 83,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030303030303030",
                "id": 76,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1150:9:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500000000_by_1",
                  "typeString": "int_const 500000000"
                },
                "value": "500000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1163:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "1177:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1169:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1163:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 82,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1162:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1150:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 87,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "1211:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 85,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1211:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e30",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1235:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
                "typeString": "literal_string \"1.0\""
              },
              "value": "1.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1338:222:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "1368:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1383:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1368:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "1442:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "1451:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1451:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1442:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1465:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1442:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:35:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1525:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "1530:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1530:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1542:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "1516:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "EmitStatement",
                  "src": "1511:44:1"
                }
              ]
            },
            "documentation": "@notice Creates the TanzoToken smart contract instance",
            "id": 109,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1328:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1338:0:1"
            },
            "scope": 186,
            "src": "1317:243:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1831:134:1",
              "statements": [
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1837:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$742",
                        "typeString": "contract ERC20Basic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 120,
                        "name": "ERC20Basic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 742,
                        "src": "1837:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$742",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1867:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 122,
                      "name": "ERC20Basic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "1856:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Basic_$742_$",
                        "typeString": "type(contract ERC20Basic)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$742",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1837:37:1"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1880:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "1914:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TanzoToken_$186",
                          "typeString": "contract TanzoToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TanzoToken_$186",
                          "typeString": "contract TanzoToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1898:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$742",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 724,
                      "src": "1898:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1947:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1952:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1932:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$742",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 733,
                      "src": "1932:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "1925:35:1"
                }
              ]
            },
            "documentation": "@dev Used to claim tokens send to wrong address\n@param _token The address that holds the tokens.\n@param _to The address that is claiming ownership of tokens.",
            "id": 140,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "1799:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1799:9:1"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1770:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1786:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1786:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1769:29:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1825:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1824:6:1"
            },
            "scope": 186,
            "src": "1749:216:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2065:100:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2075:16:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "transfersFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "2076:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 157,
                  "nodeType": "IfStatement",
                  "src": "2071:90:1",
                  "trueBody": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "2093:68:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "2101:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2101:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:22:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 152,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "2143:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2143:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 151,
                            "name": "Freeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "2136:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2136:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 155,
                        "nodeType": "EmitStatement",
                        "src": "2131:23:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Temporary freeze tocken transfers",
            "id": 159,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "2048:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2048:9:1"
              }
            ],
            "name": "freezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2065:0:1"
            },
            "scope": 186,
            "src": "2020:145:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2259:102:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 164,
                    "name": "transfersFrozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 554,
                    "src": "2269:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "2265:92:1",
                  "trueBody": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "2286:71:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 165,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "2294:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2312:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2294:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "2294:23:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 170,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "2339:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2339:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 169,
                            "name": "Unfreeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "2330:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2330:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "EmitStatement",
                        "src": "2325:25:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Unfreeze token transfers.",
            "id": 177,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 162,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 161,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "2242:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2242:9:1"
              }
            ],
            "name": "unfreezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:0:1"
            },
            "scope": 186,
            "src": "2212:149:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 181,
            "name": "Freeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "2379:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2378:23:1"
            },
            "src": "2365:37:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 185,
            "name": "Unfreeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2421:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2420:23:1"
            },
            "src": "2405:39:1"
          }
        ],
        "scope": 187,
        "src": "809:1637:1"
      }
    ],
    "src": "0:2447:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/TanzoToken.sol",
    "exportedSymbols": {
      "TanzoToken": [
        186
      ]
    },
    "id": 187,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/lib/token/ERC20Basic.sol",
        "file": "./lib/token/ERC20Basic.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 743,
        "src": "504:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/lib/token/StandardToken.sol",
        "file": "./lib/token/StandardToken.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1118,
        "src": "541:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/dimitarjelev/Projects/tanzo/contracts/contracts/lib/ownership/DelayedClaimable.sol",
        "file": "./lib/ownership/DelayedClaimable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 481,
        "src": "581:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1092,
              "src": "832:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1092",
                "typeString": "contract StandardToken"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "832:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "DelayedClaimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 480,
              "src": "847:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelayedClaimable_$480",
                "typeString": "contract DelayedClaimable"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "847:16:1"
          }
        ],
        "contractDependencies": [
          407,
          480,
          536,
          710,
          667,
          742,
          1092
        ],
        "contractKind": "contract",
        "documentation": "@title Tanzo: The Blockchain-based social marketplace for handmade goods.\n@author Tanzo team (https://tanzo.io)\n@dev The Tanzo token smart contract based on ERC20",
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186,
          480,
          407,
          536,
          1092,
          667,
          710,
          742
        ],
        "name": "TanzoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 68,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "893:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 66,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "893:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "54616e7a6f20546f6b656e",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "923:13:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3a6b30120b275629c1a946458ca7bbe7d7f32b35b93fffd557e2a06fb227f327",
                "typeString": "literal_string \"Tanzo Token\""
              },
              "value": "Tanzo Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 71,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "967:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 69,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "967:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545a4f",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "999:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_56a2317e9a72b59aad336b94b82e698608350ee4d5d464f561fc2a91f2470d1f",
                "typeString": "literal_string \"TZO\""
              },
              "value": "TZO"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 74,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "1036:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 72,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1036:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 73,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1069:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 84,
            "name": "TOTAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "1111:76:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 75,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 83,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030303030303030",
                "id": 76,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1150:9:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500000000_by_1",
                  "typeString": "int_const 500000000"
                },
                "value": "500000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1163:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "1177:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1169:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1163:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 82,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1162:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1150:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 87,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "1211:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 85,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1211:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e30",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1235:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
                "typeString": "literal_string \"1.0\""
              },
              "value": "1.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1338:222:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "1368:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1383:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1368:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "1442:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "1451:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1451:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1442:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1465:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1442:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:35:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1525:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "1530:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1530:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1542:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "1516:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "EmitStatement",
                  "src": "1511:44:1"
                }
              ]
            },
            "documentation": "@notice Creates the TanzoToken smart contract instance",
            "id": 109,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1328:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1338:0:1"
            },
            "scope": 186,
            "src": "1317:243:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1831:134:1",
              "statements": [
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1837:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$742",
                        "typeString": "contract ERC20Basic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 120,
                        "name": "ERC20Basic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 742,
                        "src": "1837:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$742",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1867:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 122,
                      "name": "ERC20Basic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "1856:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Basic_$742_$",
                        "typeString": "type(contract ERC20Basic)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$742",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1837:37:1"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1880:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "1914:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TanzoToken_$186",
                          "typeString": "contract TanzoToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TanzoToken_$186",
                          "typeString": "contract TanzoToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1898:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$742",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 724,
                      "src": "1898:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1947:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1952:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1932:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$742",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 733,
                      "src": "1932:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "1925:35:1"
                }
              ]
            },
            "documentation": "@dev Used to claim tokens send to wrong address\n@param _token The address that holds the tokens.\n@param _to The address that is claiming ownership of tokens.",
            "id": 140,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "1799:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1799:9:1"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1770:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1786:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1786:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1769:29:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1825:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1824:6:1"
            },
            "scope": 186,
            "src": "1749:216:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2065:100:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2075:16:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "transfersFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "2076:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 157,
                  "nodeType": "IfStatement",
                  "src": "2071:90:1",
                  "trueBody": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "2093:68:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "2101:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2101:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:22:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 152,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "2143:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2143:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 151,
                            "name": "Freeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "2136:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2136:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 155,
                        "nodeType": "EmitStatement",
                        "src": "2131:23:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Temporary freeze tocken transfers",
            "id": 159,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "2048:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2048:9:1"
              }
            ],
            "name": "freezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2065:0:1"
            },
            "scope": 186,
            "src": "2020:145:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2259:102:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 164,
                    "name": "transfersFrozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 554,
                    "src": "2269:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "2265:92:1",
                  "trueBody": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "2286:71:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 165,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "2294:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2312:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2294:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "2294:23:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 170,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "2339:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2339:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 169,
                            "name": "Unfreeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "2330:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2330:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "EmitStatement",
                        "src": "2325:25:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Unfreeze token transfers.",
            "id": 177,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 162,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 161,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "2242:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2242:9:1"
              }
            ],
            "name": "unfreezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:0:1"
            },
            "scope": 186,
            "src": "2212:149:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 181,
            "name": "Freeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "2379:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2378:23:1"
            },
            "src": "2365:37:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 185,
            "name": "Unfreeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2421:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2420:23:1"
            },
            "src": "2405:39:1"
          }
        ],
        "scope": 187,
        "src": "809:1637:1"
      }
    ],
    "src": "0:2447:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x3064eCE91B0646655993686678cDC0A466749Df9",
      "transactionHash": "0xb90056bdb8291ff226157f01f8590fc95fab319d62162c381de7fcf9cae08b2c"
    },"3": {
      "events": {},
      "links": {},
      "address": "0x402c94be9a7cf1c98a585c414e5adaf9512351fb",
      "transactionHash": "0x354e597c1f2b523149403a2064c12a27e4eace9bbaaaf2236bc6c0c181ab85a9"
    },
    "15": {
      "events": {},
      "links": {},
      "address": "0xe32548c28c534a6b5dd9c7106546c441d76a9490",
      "transactionHash": "0x513d963691015909eadf440db3cf406559f31e65bcb505ced403b28701bbd17d"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-13T06:14:23.179Z"
}
