{
  "contractName": "TanzoToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_start",
          "type": "uint256"
        },
        {
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "setLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "end",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Freeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Unfreeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "freezeTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unfreezeTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6002805460ff1916905560c0604052600360808190527f312e30000000000000000000000000000000000000000000000000000000000060a09081526200004a9160089190620000cb565b503480156200005857600080fd5b5060048054600160a060020a031916339081179091556b019d971e4fe8401e74000000600181905560008281526020818152604080832084905580519384525191927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a362000170565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010e57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013e57825182559160200191906001019062000121565b506200014c92915062000150565b5090565b6200016d91905b808211156200014c576000815560010162000157565b90565b6111a680620001806000396000f3006080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301502460811461014d57806306fdde0314610164578063095ea7b3146101ee57806318160ddd1461022657806323b872dd1461024d578063313ce5671461027757806331c420d4146102a25780634000aea0146102b75780634e71e0c81461032057806354fd4d5014610335578063661884631461034a57806369ffa08a1461036e57806370a08231146103955780638da5cb5b146103b6578063902d55a5146103e757806395d89b41146103fc578063a9059cbb14610411578063be9a655514610435578063c4590d3f1461044a578063cae9ca5114610465578063d73dd623146104ce578063dd62ed3e146104f2578063e30c397814610519578063efbe1c1c1461052e578063f2fde38b14610543575b600080fd5b34801561015957600080fd5b50610162610564565b005b34801561017057600080fd5b506101796105c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fa57600080fd5b50610212600160a060020a03600435166024356105f9565b604080519115158252519081900360200190f35b34801561023257600080fd5b5061023b6106a8565b60408051918252519081900360200190f35b34801561025957600080fd5b50610212600160a060020a03600435811690602435166044356106ae565b34801561028357600080fd5b5061028c610845565b6040805160ff9092168252519081900360200190f35b3480156102ae57600080fd5b5061016261084a565b3480156102c357600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108a39650505050505050565b34801561032c57600080fd5b506101626109cd565b34801561034157600080fd5b50610179610a7b565b34801561035657600080fd5b50610212600160a060020a0360043516602435610b09565b34801561037a57600080fd5b50610212600160a060020a0360043581169060243516610c0b565b3480156103a157600080fd5b5061023b600160a060020a0360043516610d5d565b3480156103c257600080fd5b506103cb610d78565b60408051600160a060020a039092168252519081900360200190f35b3480156103f357600080fd5b5061023b610d87565b34801561040857600080fd5b50610179610d97565b34801561041d57600080fd5b50610212600160a060020a0360043516602435610dce565b34801561044157600080fd5b5061023b610ecd565b34801561045657600080fd5b50610162600435602435610ed3565b34801561047157600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610eff9650505050505050565b3480156104da57600080fd5b50610212600160a060020a0360043516602435611014565b3480156104fe57600080fd5b5061023b600160a060020a03600435811690602435166110bc565b34801561052557600080fd5b506103cb6110f7565b34801561053a57600080fd5b5061023b611106565b34801561054f57600080fd5b50610162600160a060020a036004351661110c565b600454600160a060020a0316331461057b57600080fd5b60025460ff1615156105c0576002805460ff1916600117905560405133907faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304990600090a25b565b60408051808201909152600b81527f54616e7a6f20546f6b656e000000000000000000000000000000000000000000602082015281565b600060023660441461060757fe5b8215806106355750336000908152600360209081526040808320600160a060020a0388168452909152902054155b151561064057600080fd5b336000818152600360209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60015490565b60025460009060ff16156106c157600080fd5b6003366064146106cd57fe5b600160a060020a03841615156106e257600080fd5b600160a060020a03851660009081526020819052604090205483111561070757600080fd5b600160a060020a038516600090815260036020908152604080832033845290915290205483111561073757600080fd5b600160a060020a038516600090815260208190526040902054610760908463ffffffff61115216565b600160a060020a038087166000908152602081905260408082209390935590861681522054610795908463ffffffff61116416565b600160a060020a038086166000908152602081815260408083209490945591881681526003825282812033825290915220546107d7908463ffffffff61115216565b600160a060020a03808716600081815260036020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b601281565b600454600160a060020a0316331461086157600080fd5b60025460ff16156105c0576002805460ff1916905560405133907fca5069937e68fd197927055037f59d7c90bf75ac104e6e375539ef480c3ad6ee90600090a2565b6000836108b08185610dce565b1561083d576040517f141469ce0000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a0387169563141469ce95948b94938b939192909160a490910190602085019080838360005b83811015610948578181015183820152602001610930565b50505050905090810190601f1680156109755780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b505050506040513d60208110156109c157600080fd5b506001925061083d9050565b600554600160a060020a031633146109e457600080fd5b60065443111580156109f857506007544310155b1515610a0357600080fd5b600554600454604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546004805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551690556000600655565b6008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b505050505081565b600080600236604414610b1857fe5b336000908152600360209081526040808320600160a060020a0389168452909152902054915081841115610b6f57336000908152600360209081526040808320600160a060020a0389168452909152812055610ba4565b610b7f828563ffffffff61115216565b336000908152600360209081526040808320600160a060020a038a1684529091529020555b336000818152600360209081526040808320600160a060020a038a168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3506001949350505050565b60045460009081908190600160a060020a03163314610c2957600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051869350600160a060020a038416916370a082319160248083019260209291908290030181600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d6020811015610cb757600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820184905291519293509084169163a9059cbb916044808201926020929091908290030181600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d6020811015610d5257600080fd5b505195945050505050565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a031681565b6b019d971e4fe8401e7400000081565b60408051808201909152600381527f545a4f0000000000000000000000000000000000000000000000000000000000602082015281565b60025460009060ff1615610de157600080fd5b600236604414610ded57fe5b600160a060020a0384161515610e0257600080fd5b33600090815260208190526040902054831115610e1e57600080fd5b33600090815260208190526040902054610e3e908463ffffffff61115216565b3360009081526020819052604080822092909255600160a060020a03861681522054610e70908463ffffffff61116416565b600160a060020a038516600081815260208181526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b60075481565b600454600160a060020a03163314610eea57600080fd5b80821115610ef757600080fd5b600655600755565b600083610f0c81856105f9565b1561083d576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610fa4578181015183820152602001610f8c565b50505050905090810190601f168015610fd15780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610ff357600080fd5b505af1158015611007573d6000803e3d6000fd5b505050506001915061083d565b600060023660441461102257fe5b336000908152600360209081526040808320600160a060020a0388168452909152902054611056908463ffffffff61116416565b336000818152600360209081526040808320600160a060020a038a168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a35060019392505050565b60006002366044146110ca57fe5b5050600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600554600160a060020a031681565b60065481565b600454600160a060020a0316331461112357600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561115e57fe5b50900390565b60008282018381101561117357fe5b93925050505600a165627a7a72305820dea74632e36a1591f409ad6e3cb348f336275a21334e2c9707875c0f306c1a400029",
  "deployedBytecode": "0x6080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301502460811461014d57806306fdde0314610164578063095ea7b3146101ee57806318160ddd1461022657806323b872dd1461024d578063313ce5671461027757806331c420d4146102a25780634000aea0146102b75780634e71e0c81461032057806354fd4d5014610335578063661884631461034a57806369ffa08a1461036e57806370a08231146103955780638da5cb5b146103b6578063902d55a5146103e757806395d89b41146103fc578063a9059cbb14610411578063be9a655514610435578063c4590d3f1461044a578063cae9ca5114610465578063d73dd623146104ce578063dd62ed3e146104f2578063e30c397814610519578063efbe1c1c1461052e578063f2fde38b14610543575b600080fd5b34801561015957600080fd5b50610162610564565b005b34801561017057600080fd5b506101796105c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fa57600080fd5b50610212600160a060020a03600435166024356105f9565b604080519115158252519081900360200190f35b34801561023257600080fd5b5061023b6106a8565b60408051918252519081900360200190f35b34801561025957600080fd5b50610212600160a060020a03600435811690602435166044356106ae565b34801561028357600080fd5b5061028c610845565b6040805160ff9092168252519081900360200190f35b3480156102ae57600080fd5b5061016261084a565b3480156102c357600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108a39650505050505050565b34801561032c57600080fd5b506101626109cd565b34801561034157600080fd5b50610179610a7b565b34801561035657600080fd5b50610212600160a060020a0360043516602435610b09565b34801561037a57600080fd5b50610212600160a060020a0360043581169060243516610c0b565b3480156103a157600080fd5b5061023b600160a060020a0360043516610d5d565b3480156103c257600080fd5b506103cb610d78565b60408051600160a060020a039092168252519081900360200190f35b3480156103f357600080fd5b5061023b610d87565b34801561040857600080fd5b50610179610d97565b34801561041d57600080fd5b50610212600160a060020a0360043516602435610dce565b34801561044157600080fd5b5061023b610ecd565b34801561045657600080fd5b50610162600435602435610ed3565b34801561047157600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610212948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610eff9650505050505050565b3480156104da57600080fd5b50610212600160a060020a0360043516602435611014565b3480156104fe57600080fd5b5061023b600160a060020a03600435811690602435166110bc565b34801561052557600080fd5b506103cb6110f7565b34801561053a57600080fd5b5061023b611106565b34801561054f57600080fd5b50610162600160a060020a036004351661110c565b600454600160a060020a0316331461057b57600080fd5b60025460ff1615156105c0576002805460ff1916600117905560405133907faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304990600090a25b565b60408051808201909152600b81527f54616e7a6f20546f6b656e000000000000000000000000000000000000000000602082015281565b600060023660441461060757fe5b8215806106355750336000908152600360209081526040808320600160a060020a0388168452909152902054155b151561064057600080fd5b336000818152600360209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60015490565b60025460009060ff16156106c157600080fd5b6003366064146106cd57fe5b600160a060020a03841615156106e257600080fd5b600160a060020a03851660009081526020819052604090205483111561070757600080fd5b600160a060020a038516600090815260036020908152604080832033845290915290205483111561073757600080fd5b600160a060020a038516600090815260208190526040902054610760908463ffffffff61115216565b600160a060020a038087166000908152602081905260408082209390935590861681522054610795908463ffffffff61116416565b600160a060020a038086166000908152602081815260408083209490945591881681526003825282812033825290915220546107d7908463ffffffff61115216565b600160a060020a03808716600081815260036020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b601281565b600454600160a060020a0316331461086157600080fd5b60025460ff16156105c0576002805460ff1916905560405133907fca5069937e68fd197927055037f59d7c90bf75ac104e6e375539ef480c3ad6ee90600090a2565b6000836108b08185610dce565b1561083d576040517f141469ce0000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a0387169563141469ce95948b94938b939192909160a490910190602085019080838360005b83811015610948578181015183820152602001610930565b50505050905090810190601f1680156109755780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b505050506040513d60208110156109c157600080fd5b506001925061083d9050565b600554600160a060020a031633146109e457600080fd5b60065443111580156109f857506007544310155b1515610a0357600080fd5b600554600454604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546004805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551690556000600655565b6008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b505050505081565b600080600236604414610b1857fe5b336000908152600360209081526040808320600160a060020a0389168452909152902054915081841115610b6f57336000908152600360209081526040808320600160a060020a0389168452909152812055610ba4565b610b7f828563ffffffff61115216565b336000908152600360209081526040808320600160a060020a038a1684529091529020555b336000818152600360209081526040808320600160a060020a038a168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3506001949350505050565b60045460009081908190600160a060020a03163314610c2957600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051869350600160a060020a038416916370a082319160248083019260209291908290030181600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d6020811015610cb757600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820184905291519293509084169163a9059cbb916044808201926020929091908290030181600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d6020811015610d5257600080fd5b505195945050505050565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a031681565b6b019d971e4fe8401e7400000081565b60408051808201909152600381527f545a4f0000000000000000000000000000000000000000000000000000000000602082015281565b60025460009060ff1615610de157600080fd5b600236604414610ded57fe5b600160a060020a0384161515610e0257600080fd5b33600090815260208190526040902054831115610e1e57600080fd5b33600090815260208190526040902054610e3e908463ffffffff61115216565b3360009081526020819052604080822092909255600160a060020a03861681522054610e70908463ffffffff61116416565b600160a060020a038516600081815260208181526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b60075481565b600454600160a060020a03163314610eea57600080fd5b80821115610ef757600080fd5b600655600755565b600083610f0c81856105f9565b1561083d576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610fa4578181015183820152602001610f8c565b50505050905090810190601f168015610fd15780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610ff357600080fd5b505af1158015611007573d6000803e3d6000fd5b505050506001915061083d565b600060023660441461102257fe5b336000908152600360209081526040808320600160a060020a0388168452909152902054611056908463ffffffff61116416565b336000818152600360209081526040808320600160a060020a038a168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a35060019392505050565b60006002366044146110ca57fe5b5050600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600554600160a060020a031681565b60065481565b600454600160a060020a0316331461112357600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561115e57fe5b50900390565b60008282018381101561117357fe5b93925050505600a165627a7a72305820dea74632e36a1591f409ad6e3cb348f336275a21334e2c9707875c0f306c1a400029",
  "sourceMap": "312:28:5:-;;;-1:-1:-1;;312:28:5;;;733:29:0;331:1637;733:29;;331:1637;733:29;;;;;;;;;;;;;;:::i;:::-;;839:243;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;496:5:4;:18;;-1:-1:-1;;;;;;496:18:4;504:10;496:18;;;;;;672:37:0;496:18:4;890:27:0;;;496:5:4;964:20:0;;;;;;;;;;;:35;;;1038:39;;;;;;496:5:4;;1038:39:0;;;;;;;;;;;331:1637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;331:1637:0;;;-1:-1:-1;331:1637:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "331:1637:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:145:0;;;;;;415:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;415:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:271:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1835:271:8;-1:-1:-1;;;;;1835:271:8;;;;;;;;;;;;;;;;;;;;;;;;;706:83:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:83:5;;;;;;;;;;;;;;;;;;;;735:477:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;735:477:8;-1:-1:-1;;;;;735:477:8;;;;;;;;;;;;558:35:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;558:35:0;;;;;;;;;;;;;;;;;;;;;;;1734:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1734:149:0;;;;5177:291:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5177:291:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5177:291:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5177:291:8;;-1:-1:-1;5177:291:8;;-1:-1:-1;;;;;;;5177:291:8;827:240:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:240:3;;;;733:29:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;733:29:0;;;;3770:422:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3770:422:8;-1:-1:-1;;;;;3770:422:8;;;;;;;1271:216:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1271:216:0;-1:-1:-1;;;;;1271:216:0;;;;;;;;;;1562:107:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1562:107:5;-1:-1:-1;;;;;1562:107:5;;;;;238:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:4;;;;;;;;-1:-1:-1;;;;;238:20:4;;;;;;;;;;;;;;633:76:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:76:0;;;;489:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:37:0;;;;943:417:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;943:417:5;-1:-1:-1;;;;;943:417:5;;;;;;;281:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;281:20:3;;;;537:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;537:136:3;;;;;;;4568:289:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4568:289:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4568:289:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4568:289:8;;-1:-1:-1;4568:289:8;;-1:-1:-1;;;;;;;4568:289:8;3027:281;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3027:281:8;-1:-1:-1;;;;;3027:281:8;;;;;;;2425:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2425:145:8;-1:-1:-1;;;;;2425:145:8;;;;;;;;;;253:27:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:27:2;;;;259:18:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;259:18:3;;;;601:96:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;601:96:2;-1:-1:-1;;;;;601:96:2;;;;;1542:145:0;648:5:4;;-1:-1:-1;;;;;648:5:4;634:10;:19;626:28;;;;;;1598:15:0;;;;1597:16;1593:90;;;1623:15;:22;;-1:-1:-1;;1623:22:0;1641:4;1623:22;;;1658:18;;1665:10;;1658:18;;1623:15;;1658:18;1593:90;1542:145::o;415:43::-;;;;;;;;;;;;;;;;;;;:::o;1835:271:8:-;1921:4;1902:1;458:8:5;477:17;458:36;451:44;;;;1941:11:8;;;:49;;-1:-1:-1;1964:10:8;1956:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1956:29:8;;;;;;;;;;:34;1941:49;1933:58;;;;;;;;2005:10;1997:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1997:29:8;;;;;;;;;;;;:38;;;2046;;;;;;;1997:29;;2005:10;2046:38;;;;;;;;;;;-1:-1:-1;2097:4:8;;1835:271;-1:-1:-1;;;1835:271:8:o;706:83:5:-;772:12;;706:83;:::o;735:477:8:-;609:15:5;;850:4:8;;609:15:5;;605:29;;;626:8;;;605:29;831:1:8;458:8:5;477:17;458:36;451:44;;;;-1:-1:-1;;;;;870:17:8;;;;862:26;;;;;;-1:-1:-1;;;;;912:15:8;;:8;:15;;;;;;;;;;;902:25;;;894:34;;;;;;-1:-1:-1;;;;;952:14:8;;;;;;:7;:14;;;;;;;;967:10;952:26;;;;;;;;942:36;;;934:45;;;;;;-1:-1:-1;;;;;1004:15:8;;:8;:15;;;;;;;;;;;:27;;1024:6;1004:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;986:15:8;;;:8;:15;;;;;;;;;;;:45;;;;1053:13;;;;;;;:25;;1071:6;1053:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1037:13:8;;;:8;:13;;;;;;;;;;;:41;;;;1113:14;;;;;:7;:14;;;;;1128:10;1113:26;;;;;;;:38;;1144:6;1113:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1084:14:8;;;;;;;:7;:14;;;;;;;;1099:10;1084:26;;;;;;;;:67;;;;1162:28;;;;;;;;;;;1084:14;;1162:28;;;;;;;;;;;1203:4;1196:11;;501:1:5;640;735:477:8;;;;;:::o;558:35:0:-;591:2;558:35;:::o;1734:149::-;648:5:4;;-1:-1:-1;;;;;648:5:4;634:10;:19;626:28;;;;;;1791:15:0;;;;1787:92;;;1816:15;:23;;-1:-1:-1;;1816:23:0;;;1852:20;;1861:10;;1852:20;;1834:5;;1852:20;1734:149::o;5177:291:8:-;5268:4;5321:9;5341:27;5321:9;5361:6;5341:8;:27::i;:::-;5337:127;;;5378:60;;;;;5401:10;5378:60;;;;;;;;;;;;5421:4;5378:60;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5378:22:8;;;;;5401:10;5413:6;;5421:4;5427:10;;5378:60;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5378:60:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5378:60:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5378:60:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5453:4:8;;-1:-1:-1;5446:11:8;;-1:-1:-1;5446:11:8;827:240:3;433:12:2;;-1:-1:-1;;;;;433:12:2;419:10;:26;411:35;;;;;;908:3:3;;892:12;:19;;891:48;;;;;933:5;;917:12;:21;;891:48;883:57;;;;;;;;979:12;;972:5;;951:41;;-1:-1:-1;;;;;979:12:3;;;;972:5;;;;951:41;;979:12;;951:41;1006:12;;;998:5;:20;;-1:-1:-1;;998:20:3;;;-1:-1:-1;;;;;1006:12:3;;998:20;;;;1024:25;;;1006:12;1055:3;:7;827:240::o;733:29:0:-;;;;;;;;;;;;;;;-1:-1:-1;;733:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3770:422:8:-;3872:4;;3853:1;458:8:5;477:17;458:36;451:44;;;;3908:10:8;3900:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3900:29:8;;;;;;;;;;;-1:-1:-1;3939:27:8;;;3935:164;;;3984:10;4008:1;3976:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3976:29:8;;;;;;;;;:33;3935:164;;;4062:30;:8;4075:16;4062:30;:12;:30;:::i;:::-;4038:10;4030:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4030:29:8;;;;;;;;;:62;3935:164;4118:10;4140:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4109:61:8;;4140:29;;;;;;;;;;;4109:61;;;;;;;;;4118:10;4109:61;;;;;;;;;;;-1:-1:-1;4183:4:8;;3770:422;-1:-1:-1;;;;3770:422:8:o;1271:216:0:-;648:5:4;;1347:4:0;;;;;;-1:-1:-1;;;;;648:5:4;634:10;:19;626:28;;;;;;1420:21:0;;;;;;1436:4;1420:21;;;;;;1389:6;;-1:-1:-1;;;;;;1420:15:0;;;;;:21;;;;;;;;;;;;;;-1:-1:-1;1420:15:0;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1420:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1420:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1420:21:0;1454:28;;;;;;-1:-1:-1;;;;;1454:28:0;;;;;;;;;;;;;;;1420:21;;-1:-1:-1;1454:14:0;;;;;;:28;;;;;1420:21;;1454:28;;;;;;;;-1:-1:-1;1454:14:0;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1454:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1454:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1454:28:0;;1271:216;-1:-1:-1;;;;;1271:216:0:o;1562:107:5:-;-1:-1:-1;;;;;1648:16:5;1618:15;1648:16;;;;;;;;;;;;1562:107::o;238:20:4:-;;;-1:-1:-1;;;;;238:20:4;;:::o;633:76:0:-;672:37;633:76;:::o;489:37::-;;;;;;;;;;;;;;;;;;;:::o;943:417:5:-;609:15;;1039:4;;609:15;;605:29;;;626:8;;;605:29;1020:1;458:8;477:17;458:36;451:44;;;;-1:-1:-1;;;;;1059:17:5;;;;1051:26;;;;;;1110:10;1101:8;:20;;;;;;;;;;;1091:30;;;1083:39;;;;;;1224:10;1215:8;:20;;;;;;;;;;;:32;;1240:6;1215:32;:24;:32;:::i;:::-;1201:10;1192:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;1269:13:5;;;;;;:25;;1287:6;1269:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1253:13:5;;:8;:13;;;;;;;;;;;;:41;;;;1305:33;;;;;;;1253:13;;1314:10;;1305:33;;;;;;;;;;-1:-1:-1;1351:4:5;;943:417;-1:-1:-1;;;943:417:5:o;281:20:3:-;;;;:::o;537:136::-;648:5:4;;-1:-1:-1;;;;;648:5:4;634:10;:19;626:28;;;;;;617:14:3;;;;609:23;;;;;;638:3;:10;654:5;:14;537:136::o;4568:289:8:-;4660:4;4712:8;4731:25;4712:8;4749:6;4731:7;:25::i;:::-;4727:126;;;4766:61;;;;;4790:10;4766:61;;;;;;;;;;;;4810:4;4766:61;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4766:23:8;;;;;4790:10;4802:6;;4810:4;4816:10;;4766:61;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4766:61:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4766:61:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4766:61:8;;;;4842:4;4835:11;;;;3027:281;3124:4;3105:1;458:8:5;477:17;458:36;451:44;;;;3176:10:8;3168:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3168:29:8;;;;;;;;;;:46;;3202:11;3168:46;:33;:46;:::i;:::-;3144:10;3136:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3136:29:8;;;;;;;;;;;;:78;;;3225:61;;;;;;3136:29;;3225:61;;;;;;;;;;;-1:-1:-1;3299:4:8;;3027:281;-1:-1:-1;;;3027:281:8:o;2425:145::-;2518:7;2494:1;458:8:5;477:17;458:36;451:44;;;;-1:-1:-1;;;;;;;2540:15:8;;;;;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2425:145::o;253:27:2:-;;;-1:-1:-1;;;;;253:27:2;;:::o;259:18:3:-;;;;:::o;601:96:2:-;648:5:4;;-1:-1:-1;;;;;648:5:4;634:10;:19;626:28;;;;;;669:12:2;:23;;-1:-1:-1;;669:23:2;-1:-1:-1;;;;;669:23:2;;;;;;;;;;601:96::o;835:110:1:-;893:7;915:6;;;;908:14;;;;-1:-1:-1;935:5:1;;;835:110::o;1007:129::-;1065:7;1092:5;;;1110:6;;;;1103:14;;;;1130:1;1007:129;-1:-1:-1;;;1007:129:1:o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./lib/token/ERC20Basic.sol\";\nimport \"./lib/token/StandardToken.sol\";\nimport \"./lib/ownership/DelayedClaimable.sol\";\n\n/**\n * @title Tanzo: The Blockchain-based social marketplace for handmade goods.\n * @author Tanzo team (https://tanzo.io)\n * @dev The Tanzo token smart contract based on ERC20\n */\ncontract TanzoToken is StandardToken, DelayedClaimable {\n\n  // Set the token name\n  string public constant name = \"Tanzo Token\";\n\n  // Set the token symbol\n  string public constant symbol = \"TZO\";\n\n  // Define token decimals\n  uint8 public constant decimals = 18;\n\n  // Define the total token supply\n  uint256 public constant TOTAL_SUPPLY = 500000000 * (10 ** uint256(decimals));\n\n  // Token version\n  string public version = \"1.0\";\n\n  /**\n   * @notice Creates the TanzoToken smart contract instance\n   */\n  constructor() public {\n    // Set token supply\n    totalSupply_ = TOTAL_SUPPLY;\n\n    // Transfer all tokens to the owner\n    balances[msg.sender] = TOTAL_SUPPLY;\n\n    // Emit transfer event\n    emit Transfer(0x0, msg.sender, TOTAL_SUPPLY);\n  }\n\n  /**\n   * @dev Used to claim tokens send to wrong address\n   * @param _token The address that holds the tokens.\n   * @param _to The address that is claiming ownership of tokens.\n   */\n  function claimTokens(address _token, address _to) onlyOwner public returns (bool) {\n    ERC20Basic token = ERC20Basic(_token);\n    uint256 balance = token.balanceOf(this);\n    return token.transfer(_to, balance);\n  }\n\n  /**\n   * Temporary freeze tocken transfers\n   */\n  function freezeTransfers () onlyOwner public {\n    if (!transfersFrozen) {\n      transfersFrozen = true;\n      emit Freeze(msg.sender);\n    }\n  }\n\n  /**\n   * Unfreeze token transfers.\n   */\n  function unfreezeTransfers () onlyOwner public {\n    if (transfersFrozen) {\n      transfersFrozen = false;\n      emit Unfreeze(msg.sender);\n    }\n  }\n\n  event Freeze (address indexed owner);\n  event Unfreeze (address indexed owner);\n}\n",
  "sourcePath": "D:\\Projects\\ico-platform\\src\\ico-platform-tanzo-contracts\\contracts\\TanzoToken.sol",
  "ast": {
    "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/TanzoToken.sol",
    "exportedSymbols": {
      "TanzoToken": [
        129
      ]
    },
    "id": 130,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/lib/token/ERC20Basic.sol",
        "file": "./lib/token/ERC20Basic.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 615,
        "src": "26:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/lib/token/StandardToken.sol",
        "file": "./lib/token/StandardToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 990,
        "src": "63:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/lib/ownership/DelayedClaimable.sol",
        "file": "./lib/ownership/DelayedClaimable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 353,
        "src": "103:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 964,
              "src": "354:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$964",
                "typeString": "contract StandardToken"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "354:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "DelayedClaimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 352,
              "src": "369:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelayedClaimable_$352",
                "typeString": "contract DelayedClaimable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "369:16:0"
          }
        ],
        "contractDependencies": [
          279,
          352,
          408,
          539,
          582,
          614,
          964
        ],
        "contractKind": "contract",
        "documentation": "@title Tanzo: The Blockchain-based social marketplace for handmade goods.\n@author Tanzo team (https://tanzo.io)\n@dev The Tanzo token smart contract based on ERC20",
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129,
          352,
          279,
          408,
          964,
          539,
          582,
          614
        ],
        "name": "TanzoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 11,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "415:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "415:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "54616e7a6f20546f6b656e",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "445:13:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3a6b30120b275629c1a946458ca7bbe7d7f32b35b93fffd557e2a06fb227f327",
                "typeString": "literal_string \"Tanzo Token\""
              },
              "value": "Tanzo Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 14,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "489:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 12,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "489:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545a4f",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "521:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_56a2317e9a72b59aad336b94b82e698608350ee4d5d464f561fc2a91f2470d1f",
                "typeString": "literal_string \"TZO\""
              },
              "value": "TZO"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 17,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "558:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 15,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "558:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "591:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 27,
            "name": "TOTAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "633:76:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030303030303030",
                "id": 19,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "672:9:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500000000_by_1",
                  "typeString": "int_const 500000000"
                },
                "value": "500000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "685:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "699:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "691:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "691:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "685:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "684:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "672:37:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 30,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "733:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 28,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "733:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e30",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "757:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
                "typeString": "literal_string \"1.0\""
              },
              "value": "1.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "860:222:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "890:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "905:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "890:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "890:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "964:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 40,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "973:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "973:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "964:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "987:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "964:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "964:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "1052:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1052:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1064:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "1038:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "EmitStatement",
                  "src": "1033:44:0"
                }
              ]
            },
            "documentation": "@notice Creates the TanzoToken smart contract instance",
            "id": 52,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:0"
            },
            "scope": 129,
            "src": "839:243:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1353:134:0",
              "statements": [
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1359:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$614",
                        "typeString": "contract ERC20Basic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 63,
                        "name": "ERC20Basic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 614,
                        "src": "1359:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$614",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 68,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1389:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "ERC20Basic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "1378:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Basic_$614_$",
                        "typeString": "type(contract ERC20Basic)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$614",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1359:37:0"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1402:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1402:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "1436:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TanzoToken_$129",
                          "typeString": "contract TanzoToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TanzoToken_$129",
                          "typeString": "contract TanzoToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1420:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$614",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 596,
                      "src": "1420:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1402:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1469:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1474:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1454:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$614",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 605,
                      "src": "1454:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "1447:35:0"
                }
              ]
            },
            "documentation": "@dev Used to claim tokens send to wrong address\n@param _token The address that holds the tokens.\n@param _to The address that is claiming ownership of tokens.",
            "id": 83,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "1321:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1321:9:0"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1292:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1308:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1291:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1347:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1346:6:0"
            },
            "scope": 129,
            "src": "1271:216:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1587:100:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1597:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "transfersFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "1598:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 100,
                  "nodeType": "IfStatement",
                  "src": "1593:90:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1615:68:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1623:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1641:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1623:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 93,
                        "nodeType": "ExpressionStatement",
                        "src": "1623:22:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 95,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1014,
                                "src": "1665:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1665:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 94,
                            "name": "Freeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1658:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1658:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "EmitStatement",
                        "src": "1653:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Temporary freeze tocken transfers",
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "1570:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1570:9:0"
              }
            ],
            "name": "freezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:0:0"
            },
            "scope": 129,
            "src": "1542:145:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1781:102:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 107,
                    "name": "transfersFrozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 426,
                    "src": "1791:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1787:92:0",
                  "trueBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1808:71:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1816:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1834:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1816:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "1816:23:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1014,
                                "src": "1861:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1861:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 112,
                            "name": "Unfreeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1852:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1852:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "EmitStatement",
                        "src": "1847:25:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Unfreeze token transfers.",
            "id": 120,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 105,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 104,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "1764:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1764:9:0"
              }
            ],
            "name": "unfreezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:0"
            },
            "scope": 129,
            "src": "1734:149:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 124,
            "name": "Freeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1901:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1901:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1900:23:0"
            },
            "src": "1887:37:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 128,
            "name": "Unfreeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1943:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1942:23:0"
            },
            "src": "1927:39:0"
          }
        ],
        "scope": 130,
        "src": "331:1637:0"
      }
    ],
    "src": "0:1969:0"
  },
  "legacyAST": {
    "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/TanzoToken.sol",
    "exportedSymbols": {
      "TanzoToken": [
        129
      ]
    },
    "id": 130,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/lib/token/ERC20Basic.sol",
        "file": "./lib/token/ERC20Basic.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 615,
        "src": "26:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/lib/token/StandardToken.sol",
        "file": "./lib/token/StandardToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 990,
        "src": "63:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Projects/ico-platform/src/ico-platform-tanzo-contracts/contracts/lib/ownership/DelayedClaimable.sol",
        "file": "./lib/ownership/DelayedClaimable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 353,
        "src": "103:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 964,
              "src": "354:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$964",
                "typeString": "contract StandardToken"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "354:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "DelayedClaimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 352,
              "src": "369:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelayedClaimable_$352",
                "typeString": "contract DelayedClaimable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "369:16:0"
          }
        ],
        "contractDependencies": [
          279,
          352,
          408,
          539,
          582,
          614,
          964
        ],
        "contractKind": "contract",
        "documentation": "@title Tanzo: The Blockchain-based social marketplace for handmade goods.\n@author Tanzo team (https://tanzo.io)\n@dev The Tanzo token smart contract based on ERC20",
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129,
          352,
          279,
          408,
          964,
          539,
          582,
          614
        ],
        "name": "TanzoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 11,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "415:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "415:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "54616e7a6f20546f6b656e",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "445:13:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3a6b30120b275629c1a946458ca7bbe7d7f32b35b93fffd557e2a06fb227f327",
                "typeString": "literal_string \"Tanzo Token\""
              },
              "value": "Tanzo Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 14,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "489:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 12,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "489:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545a4f",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "521:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_56a2317e9a72b59aad336b94b82e698608350ee4d5d464f561fc2a91f2470d1f",
                "typeString": "literal_string \"TZO\""
              },
              "value": "TZO"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 17,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "558:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 15,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "558:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "591:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 27,
            "name": "TOTAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "633:76:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030303030303030",
                "id": 19,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "672:9:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500000000_by_1",
                  "typeString": "int_const 500000000"
                },
                "value": "500000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "685:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "699:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "691:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "691:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "685:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "684:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "672:37:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 30,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "733:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 28,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "733:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e30",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "757:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
                "typeString": "literal_string \"1.0\""
              },
              "value": "1.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "860:222:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "890:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "905:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "890:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "890:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "964:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 40,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "973:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "973:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "964:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "987:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "964:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "964:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "1052:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1052:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1064:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "1038:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "EmitStatement",
                  "src": "1033:44:0"
                }
              ]
            },
            "documentation": "@notice Creates the TanzoToken smart contract instance",
            "id": 52,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:0"
            },
            "scope": 129,
            "src": "839:243:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1353:134:0",
              "statements": [
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1359:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$614",
                        "typeString": "contract ERC20Basic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 63,
                        "name": "ERC20Basic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 614,
                        "src": "1359:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$614",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 68,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1389:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "ERC20Basic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "1378:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Basic_$614_$",
                        "typeString": "type(contract ERC20Basic)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$614",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1359:37:0"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1402:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1402:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "1436:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TanzoToken_$129",
                          "typeString": "contract TanzoToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TanzoToken_$129",
                          "typeString": "contract TanzoToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1420:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$614",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 596,
                      "src": "1420:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1402:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1469:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1474:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1454:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$614",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 605,
                      "src": "1454:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "1447:35:0"
                }
              ]
            },
            "documentation": "@dev Used to claim tokens send to wrong address\n@param _token The address that holds the tokens.\n@param _to The address that is claiming ownership of tokens.",
            "id": 83,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "1321:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1321:9:0"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1292:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1308:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1291:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1347:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1346:6:0"
            },
            "scope": 129,
            "src": "1271:216:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1587:100:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1597:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "transfersFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "1598:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 100,
                  "nodeType": "IfStatement",
                  "src": "1593:90:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1615:68:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1623:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1641:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1623:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 93,
                        "nodeType": "ExpressionStatement",
                        "src": "1623:22:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 95,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1014,
                                "src": "1665:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1665:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 94,
                            "name": "Freeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1658:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1658:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "EmitStatement",
                        "src": "1653:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Temporary freeze tocken transfers",
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "1570:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1570:9:0"
              }
            ],
            "name": "freezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:0:0"
            },
            "scope": 129,
            "src": "1542:145:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1781:102:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 107,
                    "name": "transfersFrozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 426,
                    "src": "1791:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1787:92:0",
                  "trueBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1808:71:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "transfersFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1816:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1834:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1816:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "1816:23:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1014,
                                "src": "1861:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1861:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 112,
                            "name": "Unfreeze",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1852:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1852:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "EmitStatement",
                        "src": "1847:25:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Unfreeze token transfers.",
            "id": 120,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 105,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 104,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "1764:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1764:9:0"
              }
            ],
            "name": "unfreezeTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:0"
            },
            "scope": 129,
            "src": "1734:149:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 124,
            "name": "Freeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1901:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1901:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1900:23:0"
            },
            "src": "1887:37:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 128,
            "name": "Unfreeze",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1943:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1942:23:0"
            },
            "src": "1927:39:0"
          }
        ],
        "scope": 130,
        "src": "331:1637:0"
      }
    ],
    "src": "0:1969:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x402c94be9a7cf1c98a585c414e5adaf9512351fb",
      "transactionHash": "0x354e597c1f2b523149403a2064c12a27e4eace9bbaaaf2236bc6c0c181ab85a9"
    },
    "15": {
      "events": {},
      "links": {},
      "address": "0xe32548c28c534a6b5dd9c7106546c441d76a9490",
      "transactionHash": "0x513d963691015909eadf440db3cf406559f31e65bcb505ced403b28701bbd17d"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-05T07:54:57.980Z"
}